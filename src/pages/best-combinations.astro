---
import equipment from "~/client/equipment";
import CombinationFilter from "~/components/combination-filter.tsx";
import Combinations from "~/components/combinations.tsx";
import Layout from "~/layouts/base.astro";
import damage from "lib/damage";
import { prettifyNumber, sum } from "lib/utilities";

const toPercentageOrZero = (value: number | undefined) => (value && value > 0 ? value / 100 : 0);

const equipmentDataCollectionDescending = equipment.NAMED.map(
    (outerEntry, index) =>
        [
            outerEntry.name,

            equipment.NAMED.slice(index).map(
                innerEntry =>
                    [
                        innerEntry.name,

                        damage.calculateMultiplier({
                            attackMultiplier: sum([
                                toPercentageOrZero(outerEntry?.data.damage),
                                toPercentageOrZero(innerEntry?.data.damage),
                            ]),
                            cooldownReduction: [
                                toPercentageOrZero(outerEntry?.data.cooldownReduction),
                                toPercentageOrZero(innerEntry?.data.cooldownReduction),
                            ],
                            criticalChance: Math.min(
                                sum([
                                    toPercentageOrZero(outerEntry?.data.criticalChance),
                                    toPercentageOrZero(innerEntry?.data.criticalChance),
                                ]),
                                1,
                            ),
                            criticalDamage: sum([
                                toPercentageOrZero(outerEntry?.data.criticalDamage),
                                toPercentageOrZero(innerEntry?.data.criticalDamage),
                            ]),
                        }),
                    ] as [string, number],
            ),
        ] as [string, [string, number][]],
)
    .map(outerEntry => outerEntry[1].map(innerEntry => [outerEntry[0], ...innerEntry] as [string, string, number]))
    .flat()
    .sort((a, b) => b[2] - a[2])
    .map(([firstName, lastName, damageMultiplier]) => [
        firstName,
        lastName,
        prettifyNumber((damageMultiplier - 1) * 100, 2),
    ]);
const names = equipment.NAMED.map(entry => entry.name);
---

<Layout appendMainClass="flex-col" class="box-border flex flex-col gap-2 p-4 lg:py-6">
    <CombinationFilter client:only="react" names={names} />
    <Combinations client:only="react" equipment={equipmentDataCollectionDescending} />
</Layout>
